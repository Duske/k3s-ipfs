apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: text-analysis
spec:
  entrypoint: extract-data
  templates:
  - name: extract-data
    dag:
      tasks:
      - name: extract-data
        template: extract-data-template
      
      - name: guess-language
        dependencies: [extract-data]
        template: guess-language
        arguments:
          artifacts:
          - name: text
            from: "{{tasks.extract-data.outputs.artifacts.content}}" 


  - name: extract-data-template
    nodeSelector:
      node-role.kubernetes.io/worker: true
    container:
      # registry.gitlab.cc-asp.fraunhofer.de:4567/dchabrowski/distributed-analysis-network/text-metadata-extractor:latest
      image: ipfs-companion:5000/ciqmjrloulgan5nvknwkekuukcck2cp2tab5x2uvjhj3f325t3genxa
      command: [sh, -c]
      args: ["npm start /worker_data/faust.txt"]
      volumeMounts:
        - mountPath: /worker_data
          name: datavol
    volumes:
    - name: datavol
      hostPath:
        path: /worker_data
        type: Directory
    outputs:
      artifacts:
      - name: meta
        path: /usr/src/app/meta.json
        ipfs:
          storageEndpoint: "http://ipfs-cluster:9094/add"
      - name: content
        path: /usr/src/app/text.txt
        ipfs:
          storageEndpoint: "http://ipfs-cluster:9094/add"
  - name: guess-language
    container:
      # registry.gitlab.cc-asp.fraunhofer.de:4567/dchabrowski/distributed-analysis-network/text-language-guesser
      image: ipfs-companion:5000/ciqfhhzayced47yof4k2cp5apxdvtqg5jihq6qampdijdfy7zrcahfq
      command: [sh, -c]
      args: ["npm start /tmp/text"]
    inputs:
      artifacts:
      - name: text
        path: /tmp/text
    outputs:
      artifacts:
      - name: language
        path: /usr/src/app/language.json
        ipfs:
          storageEndpoint: "http://ipfs-cluster:9094/add"